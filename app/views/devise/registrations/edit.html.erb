<h2 class="text-center my-4">プロフィール編集</h2>

<div class="container" style="max-width: 500px;">
  <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, class: "needs-validation", novalidate: true }) do |f| %>
    <%= render "devise/shared/error_messages", resource: resource %>

    <!-- メールアドレス -->
    <div class="mb-3">
      <%= f.label :email, "メールアドレス", class: "form-label" %>
      <%= f.email_field :email, class: "form-control", autofocus: true, autocomplete: "email", required: true %>
      <div class="invalid-feedback">有効なメールアドレスを入力してください。</div>
    </div>

    <!-- 名前 -->
    <div class="mb-3">
      <%= f.label :name, "名前", class: "form-label" %>
      <%= f.text_field :name, class: "form-control", autofocus: true, autocomplete: "name", required: true, maxlength: 30 %>
      <div class="invalid-feedback">名前を入力してください（30文字以内）。</div>
    </div>

    <!-- プロフィール画像 -->
    <div class="mb-3">
      <%= f.label :profile_image, "プロフィール画像", class: "form-label" %>
      <%= f.file_field :profile_image, class: "form-control" %>
      <% if resource.profile_image.attached? %>
        <p>現在のプロフィール画像:</p>
        <%= image_tag resource.profile_image_as_thumbnail, class: "rounded-circle img-thumbnail" if resource.profile_image_as_thumbnail %>
      <% end %>
    </div>
      <!-- 現在のパスワード -->
    <div class="mb-3" style="position: relative;">
      <%= f.label :current_password, "現在のパスワード", class: "form-label" %>
      <%= f.password_field :current_password, class: "form-control", id: "currentPasswordField", autocomplete: "current-password", required: true %>
      <i onclick="togglePasswordVisibility('currentPasswordField', this)" class="bi bi-eye" style="position: absolute; right: 10px; top: 35px; cursor: pointer;"></i>
      <div class="form-text">変更を保存するには現在のパスワードを入力してください。</div>
      <div class="invalid-feedback">現在のパスワードを入力してください。</div>
    </div>

    <!-- パスワード -->
    <div class="mb-3" style="position: relative;">
      <%= f.label :password, "新しいパスワード (任意)", class: "form-label" %>
      <%= f.password_field :password, class: "form-control", id: "passwordField", autocomplete: "new-password", minlength: @minimum_password_length %>
      <i onclick="togglePasswordVisibility('passwordField', this)" class="bi bi-eye" style="position: absolute; right: 10px; top: 35px; cursor: pointer;"></i>
      <div class="form-text">パスワードを変更しない場合は空欄のままにしてください。</div>
      <div class="invalid-feedback">パスワードを<%= @minimum_password_length %>文字以上で入力してください。</div>
    </div>

    <!-- パスワード確認 -->
    <div class="mb-3" style="position: relative;">
      <%= f.label :password_confirmation, "パスワードの確認", class: "form-label" %>
      <%= f.password_field :password_confirmation, class: "form-control", id: "passwordConfirmationField", autocomplete: "new-password" %>
      <i onclick="togglePasswordVisibility('passwordConfirmationField', this)" class="bi bi-eye" style="position: absolute; right: 10px; top: 35px; cursor: pointer;"></i>
      <div class="invalid-feedback">パスワードを再度入力してください。</div>
    </div>

  

    <!-- 更新ボタン -->
    <div class="d-grid gap-2">
      <%= f.submit "更新する", class: "btn btn-primary" %>
    </div>
  <% end %>

  <!-- アカウント削除ボタン -->
  <div class="text-center mt-4">
    <h3>アカウントを削除</h3>
    <p>アカウントを削除したい場合はこちら</p>
    <%= button_to "アカウントを削除する", registration_path(resource_name), data: { confirm: "本当に良いですか?", turbo_confirm: "本当に良いですか?" }, method: :delete, class: "btn btn-danger" %>
  </div>

  <div class="mt-3">
    <%= link_to "戻る", :back, class: "btn btn-secondary" %>
  </div>
</div>

<script>
  function togglePasswordVisibility(fieldId, icon) {
    const field = document.getElementById(fieldId);
    const isPasswordHidden = field.type === "password";
    field.type = isPasswordHidden ? "text" : "password";
    icon.className = isPasswordHidden ? "bi bi-eye-slash" : "bi bi-eye";
  }

  // Bootstrapのカスタムバリデーション
  (function () {
    'use strict';
    var forms = document.querySelectorAll('.needs-validation');
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
  })();
</script>
